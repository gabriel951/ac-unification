(|tuples|
 (|num_arg_fun_TCC1| 0
  (|num_arg_fun_TCC1-1| NIL 3760279832 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|num_arg_fun_TCC2| 0
  (|num_arg_fun_TCC2-1| NIL 3760279832 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|num_arg_fun_TCC3| 0
  (|num_arg_fun_TCC3-1| NIL 3760279832 ("" (TCC))
   ((<< ADT-DEF-DECL "(strict_well_founded?[term])" |term_adt| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|select_nth_TCC1| 0
  (|select_nth_TCC1-1| NIL 3760279832 ("" (TCC))
   ((|minus_odd_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|extract_arg_TCC1| 0
  (|extract_arg_TCC1-1| NIL 3763371360 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|extract_arg_TCC2| 0
  (|extract_arg_TCC2-1| NIL 3763371360 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|get_args_le_TCC1| 0
  (|get_args_le_TCC1-1| NIL 3763493169 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|get_args_le_TCC2| 0
  (|get_args_le_TCC2-1| NIL 3763493169 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|get_args_le_TCC3| 0
  (|get_args_le_TCC3-1| NIL 3763493169 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|get_args_le_TCC4| 0
  (|get_args_le_TCC4-1| NIL 3763493169 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|get_args_gt_TCC1| 0
  (|get_args_gt_TCC1-1| NIL 3763493169 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|get_args_gt_TCC2| 0
  (|get_args_gt_TCC2-1| NIL 3763493169 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|get_args_gt_TCC3| 0
  (|get_args_gt_TCC3-1| NIL 3763493169 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|get_pairs_aux_TCC1| 0
  (|get_pairs_aux_TCC1-1| NIL 3763371360 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|get_pairs_aux_TCC2| 0
  (|get_pairs_aux_TCC2-1| NIL 3763371360 ("" (TERMINATION-TCC) NIL NIL) NIL
   NIL))
 (|gen_pairs_order_nth_TCC1| 0
  (|gen_pairs_order_nth_TCC1-1| NIL 3763371360 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL))
 (|gen_pairs_order_nth_TCC2| 0
  (|gen_pairs_order_nth_TCC2-1| NIL 3763371360 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL))
 (|gen_pairs_order_nth_TCC3| 0
  (|gen_pairs_order_nth_TCC3-1| NIL 3763371360 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL))
 (|gen_pairs_order_nth_TCC4| 0
  (|gen_pairs_order_nth_TCC4-1| NIL 3763371360 ("" (TERMINATION-TCC) NIL NIL)
   NIL NIL))
 (|gen_pairs_order_TCC1| 0
  (|gen_pairs_order_TCC1-1| NIL 3763371360 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|add_term_beg_lst_arg_TCC1| 0
  (|add_term_beg_lst_arg_TCC1-1| NIL 3763371360 ("" (SUBTYPE-TCC) NIL NIL) NIL
   NIL))
 (|add_term_beg_lst_arg_TCC2| 0
  (|add_term_beg_lst_arg_TCC2-1| NIL 3763371360 ("" (TERMINATION-TCC) NIL NIL)
   NIL NIL))
 (|gen_args_any_order_nth_TCC1| 0
  (|gen_args_any_order_nth_TCC1-1| NIL 3763371360 ("" (SUBTYPE-TCC) NIL NIL)
   NIL NIL))
 (|gen_args_any_order_nth_TCC2| 0
  (|gen_args_any_order_nth_TCC2-1| NIL 3763371360 ("" (SUBTYPE-TCC) NIL NIL)
   NIL NIL))
 (|gen_args_any_order_nth_TCC3| 0
  (|gen_args_any_order_nth_TCC3-1| NIL 3763371360
   ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|ac2pair_TCC1| 0
  (|ac2pair_TCC1-1| NIL 3763371360 ("" (TERMINATION-TCC) NIL NIL) NIL NIL))
 (|num_arg_fun_ge_one| 0
  (|num_arg_fun_ge_one-1| NIL 3763621928
   ("" (INDUCT "t")
    (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL) ("3" (GRIND) NIL NIL)
     ("4" (GRIND) NIL NIL) ("5" (GRIND) NIL NIL) ("6" (GRIND) NIL NIL)
     ("7" (GRIND) NIL NIL) ("8" (GRIND) NIL NIL))
    NIL)
   ((NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|term_induction| FORMULA-DECL NIL |term_adt| NIL)
    (|num_arg_fun| DEF-DECL "nat" |tuples| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL))
   SHOSTAK))
 (|car_extract_arg_eq_select_first_TCC1| 0
  (|car_extract_arg_eq_select_first_TCC1-1| NIL 3763624479
   ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|car_extract_arg_eq_select_first| 0
  (|car_extract_arg_eq_select_first-1| NIL 3763624482
   ("" (INDUCT "n")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (EXPAND "extract_arg" 1)
          (("2" (ASSERT)
            (("2" (LIFT-IF)
              (("2" (ASSERT)
                (("2" (PROP)
                  (("2" (INST? -1)
                    (("2" (PROP)
                      (("1" (ASSERT)
                        (("1" (REWRITE "car_append")
                          (("1" (HIDE -2 -3 -4 2)
                            (("1" (EXPAND "extract_arg")
                              (("1" (LEMMA "member_null[term]")
                                (("1"
                                  (INST -1 "_" "select_nth(j)(t, ac_sym(t))")
                                  (("1" (LIFT-IF)
                                    (("1" (SPLIT)
                                      (("1" (FLATTEN) (("1" (GRIND) NIL NIL))
                                        NIL)
                                       ("2" (FLATTEN)
                                        (("2" (INST? -2)
                                          (("2" (PROP)
                                            (("2" (HIDE -1 2 3)
                                              (("2" (REWRITE "append_member")
                                                (("2" (GRIND) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE -1 -2 3) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("3" (HIDE 2)
      (("3" (SKEEP)
        (("3" (EXPAND "extract_arg" 1)
          (("3" (LEMMA "cons_append[term]")
            (("3" (ASSERT)
              (("3" (LIFT-IF)
                (("3" (SPLIT)
                  (("1" (GRIND) NIL NIL)
                   ("2" (FLATTEN)
                    (("2" (INST? -1)
                      (("2" (REPLACE -1 2)
                        (("2" (HIDE-ALL-BUT 2) (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|car| ADT-ACCESSOR-DECL "[(cons?) -> T]" |list_adt| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|select_nth| DEF-DECL "term" |tuples| NIL)
    (|ac_sym| ADT-ACCESSOR-DECL "[(ac_app?) -> ac_symbol]" |term_adt| NIL)
    (|extract_arg| DEF-DECL "list[term]" |tuples| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|every| ADT-DEF-DECL "boolean" |list_adt| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|every| ADT-DEF-DECL "boolean" |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member_null| FORMULA-DECL NIL |list_props| NIL)
    (|append_member| FORMULA-DECL NIL |structure_extra| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|car_append| FORMULA-DECL NIL |structure_extra| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|cons_append| FORMULA-DECL NIL |structure_extra| NIL))
   SHOSTAK))
 (|get_args_gt_is_sound| 0
  (|get_args_gt_is_sound-1| NIL 3763494244
   ("" (INDUCT "arg1")
    (("1" (SKEEP)
      (("1" (ASSERT)
        (("1" (EXPAND "get_args_gt")
          (("1" (LIFT-IF)
            (("1" (SPLIT)
              (("1" (GRIND) NIL NIL)
               ("2" (FLATTEN)
                (("2" (SPLIT)
                  (("1" (GRIND) NIL NIL)
                   ("2" (FLATTEN)
                    (("2" (HIDE 2 3) (("2" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL)
     ("2" (SKOLEM 1 ("car_arg1" "cdr_arg1"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "get_args_gt" 1)
            (("2" (LIFT-IF)
              (("2" (SPLIT)
                (("1" (HIDE -1) (("1" (GRIND) NIL NIL)) NIL)
                 ("2" (FLATTEN)
                  (("2" (SPLIT)
                    (("1" (GRIND) NIL NIL)
                     ("2" (FLATTEN)
                      (("2" (INST -1 "arg2") (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|get_args_gt| DEF-DECL "list[term]" |tuples| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   SHOSTAK))
 (|suf_cond_get_args_gt_non_empty| 0
  (|suf_cond_get_args_gt_non_empty-1| NIL 3763561480
   ("" (INDUCT "n")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (EXPAND "get_args_gt" -3)
          (("2" (LIFT-IF)
            (("2" (SPLIT)
              (("1" (ASSERT) NIL NIL)
               ("2" (FLATTEN) (("2" (GRIND) NIL NIL)) NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|cdr| ADT-ACCESSOR-DECL "[(cons?) -> list]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|get_args_gt| DEF-DECL "list[term]" |tuples| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK))
 (|get_args_le_is_sound| 0
  (|get_args_le_is_sound-1| NIL 3763493436
   ("" (INDUCT "arg1")
    (("1" (GRIND) NIL NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (EXPAND "get_args_le" 1)
          (("2" (LIFT-IF)
            (("2" (SPLIT)
              (("1" (FLATTEN) (("1" (HIDE -2 1) (("1" (GRIND) NIL NIL)) NIL))
                NIL)
               ("2" (FLATTEN)
                (("2" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (HIDE -2 2 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                   ("2" (FLATTEN)
                    (("2" (HIDE 1 3 4)
                      (("2" (INST -1 "arg2") (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|get_args_le| DEF-DECL "list[term]" |tuples| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|perm| TYPE-EQ-DECL NIL |atoms| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL))
   SHOSTAK))
 (|suf_cond_get_args_le_non_empty| 0
  (|suf_cond_get_args_le_non_empty-1| NIL 3763561749 ("" (GRIND) NIL NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|get_args_le| DEF-DECL "list[term]" |tuples| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   SHOSTAK))
 (|suf_cond_pair_in_get_pairs_aux| 0
  (|suf_cond_pair_in_get_pairs_aux-1| NIL 3763454256
   ("" (INDUCT "lst_terms2")
    (("1" (SKEEP) (("1" (HIDE 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
     ("2" (SKOLEM 1 ("car_t2" "cdr_t2"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "get_pairs_aux" 1)
            (("2" (CASE "t2 = car_t2")
              (("1" (HIDE -2 -3) (("1" (GRIND) NIL NIL)) NIL)
               ("2" (INST? -1)
                (("2" (ASSERT)
                  (("2" (CASE "member(t2, cdr_t2)")
                    (("1" (ASSERT)
                      (("1" (HIDE -1 -3 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                     ("2" (HIDE -1 3) (("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|get_pairs_aux| DEF-DECL "list[term]" |tuples| NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|suf_cond_pair_in_get_pairs| 0
  (|suf_cond_pair_in_get_pairs-1| NIL 3763453645
   ("" (INDUCT "lst_terms1")
    (("1" (SKEEP) (("1" (HIDE -2 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
     ("2" (SKOLEM 1 ("car_l1" "cdr_l1"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (HIDE -1)
            (("2" (CASE "t1 = car_l1")
              (("1" (EXPAND "get_pairs" 1)
                (("1" (REWRITE "append_member")
                  (("1" (FLATTEN)
                    (("1" (REPLACE -1 1)
                      (("1" (LEMMA "suf_cond_pair_in_get_pairs_aux")
                        (("1" (INST? -1) (("1" (ASSERT) NIL NIL)) NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (CASE "member(t1, cdr_l1)")
                (("1" (REVEAL -1)
                  (("1" (INST -1 "lst_terms2" "t1" "t2")
                    (("1" (PROP)
                      (("1" (EXPAND "get_pairs" 2)
                        (("1" (REWRITE "append_member" 2)
                          (("1" (FLATTEN) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -2 3) (("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|get_pairs| DEF-DECL "list[term]" |tuples| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|perm| TYPE-EQ-DECL NIL |atoms| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|suf_cond_pair_in_get_pairs_aux| FORMULA-DECL NIL |tuples| NIL)
    (|append_member| FORMULA-DECL NIL |structure_extra| NIL)
    (|get_pairs_aux| DEF-DECL "list[term]" |tuples| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   SHOSTAK))
 (|gen_pairs_nth_implies_gen_pairs_nth_above| 0
  (|gen_pairs_nth_implies_gen_pairs_nth_above-1| NIL 3763463870
   ("" (INDUCT "i")
    (("1" (SKEEP)
      (("1" (CASE "n = 0")
        (("1" (ASSERT) NIL NIL) ("2" (HIDE -1 2) (("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (CASE "n = j + 1")
          (("1" (ASSERT) NIL NIL)
           ("2" (EXPAND "gen_pairs_order_nth" 2)
            (("2" (LIFT-IF)
              (("2" (SPLIT)
                (("1" (FLATTEN)
                  (("1" (EXPAND "gen_pairs_order_nth" -3)
                    (("1" (HIDE -2 -4 1 2) (("1" (GRIND) NIL NIL)) NIL)) NIL))
                  NIL)
                 ("2" (FLATTEN)
                  (("2" (SPLIT)
                    (("1" (FLATTEN)
                      (("1" (HIDE -2 -4 2 3) (("1" (GRIND) NIL NIL)) NIL)) NIL)
                     ("2" (FLATTEN)
                      (("2" (SPLIT)
                        (("1" (FLATTEN)
                          (("1" (ASSERT)
                            (("1" (CASE "n = 0")
                              (("1" (REPLACE -1 -4)
                                (("1" (HIDE-ALL-BUT -4)
                                  (("1" (EXPAND "gen_pairs_order_nth")
                                    (("1" (GRIND) NIL NIL)) NIL))
                                  NIL))
                                NIL)
                               ("2" (HIDE -2 -3 2 3 4) (("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (FLATTEN)
                          (("2" (REWRITE "append_member")
                            (("1" (PROP) (("1" (POSTPONE) NIL NIL)) NIL)
                             ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (|gen_pairs_order_nth| DEF-DECL "list[term]" |tuples| NIL)
    (<= CONST-DECL "bool" |reals| NIL) (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|get_args_gt| DEF-DECL "list[term]" |tuples| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|get_args_le| DEF-DECL "list[term]" |tuples| NIL)
    (|get_pairs| DEF-DECL "list[term]" |tuples| NIL)
    (|append_member| FORMULA-DECL NIL |structure_extra| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|suf_cond_get_args_gt_non_empty| FORMULA-DECL NIL |tuples| NIL)
    (|suf_cond_get_args_le_non_empty| FORMULA-DECL NIL |tuples| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL))
   SHOSTAK))
 (|combine_pairs_is_correct_aux| 0
  (|combine_pairs_is_correct_aux-1| NIL 3763563281
   ("" (INDUCT "lst_terms2")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("head_t2" "cons_t2"))
      (("2" (PROP) (("2" (SKEEP) (("2" (GRIND) NIL NIL)) NIL)) NIL)) NIL))
    NIL)
   ((|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|combine_pairs_aux| DEF-DECL "list[unif_prb_typ]" |tuples| NIL)
    (|unif_prb_typ| TYPE-EQ-DECL NIL |tuples| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|combine_pairs_is_correct_aux2| 0
  (|combine_pairs_is_correct_aux2-1| NIL 3763566050
   ("" (INDUCT "lst_terms2")
    (("1" (GRIND) NIL NIL)
     ("2" (SKOLEM 1 ("head_t2" "head_t1"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "combine_pairs_aux" -2) (("2" (GRIND) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|combine_pairs_aux| DEF-DECL "list[unif_prb_typ]" |tuples| NIL)
    (|unif_prb_typ| TYPE-EQ-DECL NIL |tuples| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|combine_pairs_is_correct| 0
  (|combine_pairs_is_correct-1| NIL 3763562782
   ("" (INDUCT "lst_terms1")
    (("1" (SKEEP) (("1" (GRIND) NIL NIL)) NIL)
     ("2" (SKOLEM 1 ("head_l1" "tail_l1"))
      (("2" (PROP)
        (("2" (SKEEP)
          (("2" (EXPAND "combine_pairs" 1)
            (("2" (PROP)
              (("1" (REWRITE "append_member")
                (("1" (PROP)
                  (("1" (LEMMA "combine_pairs_is_correct_aux2")
                    (("1" (INST? -1) (("1" (PROP) (("1" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND) NIL NIL))
                  NIL))
                NIL)
               ("2" (REWRITE "append_member")
                (("2" (PROP)
                  (("1" (LEMMA "combine_pairs_is_correct_aux2")
                    (("1" (INST? -1)
                      (("1" (PROP)
                        (("1" (REPLACE -1 -2)
                          (("1" (HIDE -1)
                            (("1" (LEMMA "combine_pairs_is_correct_aux")
                              (("1" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (GRIND) NIL NIL))
                  NIL))
                NIL)
               ("3" (REWRITE "append_member")
                (("3" (FLATTEN)
                  (("3" (CASE "t = head_l1")
                    (("1" (REPLACE -1 1 RL)
                      (("1" (HIDE -4)
                        (("1" (LEMMA "combine_pairs_is_correct_aux")
                          (("1" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL)
                     ("2" (CASE "member(t, tail_l1)")
                      (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL)
                       ("2" (HIDE -2 -3 3 4) (("2" (GRIND) NIL NIL)) NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (|unif_prb_typ| TYPE-EQ-DECL NIL |tuples| NIL)
    (|combine_pairs| DEF-DECL "list[unif_prb_typ]" |tuples| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL) (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL) (|perm| TYPE-EQ-DECL NIL |atoms| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|combine_pairs_is_correct_aux| FORMULA-DECL NIL |tuples| NIL)
    (|combine_pairs_aux| DEF-DECL "list[unif_prb_typ]" |tuples| NIL)
    (|append_member| FORMULA-DECL NIL |structure_extra| NIL)
    (|combine_pairs_is_correct_aux2| FORMULA-DECL NIL |tuples| NIL))
   SHOSTAK))
 (|split_membership_gen_unif_prb_TCC1| 0
  (|split_membership_gen_unif_prb_TCC1-1| NIL 3763371360
   ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|split_membership_gen_unif_prb_TCC2| 0
  (|split_membership_gen_unif_prb_TCC2-1| NIL 3763371360
   ("" (SUBTYPE-TCC) NIL NIL) NIL NIL))
 (|split_membership_gen_unif_prb| 0
  (|split_membership_gen_unif_prb-1| NIL 3763562047
   ("" (SKEEP)
    (("" (EXPAND "gen_unif_prb")
      (("" (REWRITE "combine_pairs_is_correct") NIL NIL)) NIL))
    NIL)
   ((|gen_unif_prb| CONST-DECL "list[unif_prb_typ]" |tuples| NIL)
    (|gen_pairs_any_order| CONST-DECL "list[term]" |tuples| NIL)
    (|ac_sym| ADT-ACCESSOR-DECL "[(ac_app?) -> ac_symbol]" |term_adt| NIL)
    (|num_arg_fun| DEF-DECL "nat" |tuples| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|extract_arg| DEF-DECL "list[term]" |tuples| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|gen_pairs_order| CONST-DECL "list[term]" |tuples| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|combine_pairs_is_correct| FORMULA-DECL NIL |tuples| NIL))
   SHOSTAK))
 (|length_equal_num_arg_fun| 0
  (|length_equal_num_arg_fun-1| NIL 3763371370
   ("" (INDUCT "n")
    (("1" (SKEEP) (("1" (HIDE -1 1) (("1" (GRIND) NIL NIL)) NIL)) NIL)
     ("2" (SKEEP)
      (("2" (SKEEP)
        (("2" (EXPAND "extract_arg" 1)
          (("2" (LIFT-IF)
            (("2" (PROP)
              (("1" (EXPAND "length")
                (("1" (HIDE -2 -3 -4) (("1" (GRIND) NIL NIL)) NIL)) NIL)
               ("2" (HIDE 1)
                (("2" (REWRITE "length_append")
                  (("2" (ASSERT)
                    (("2" (EXPAND "length" 1 1)
                      (("2" (EXPAND "length" 1 2)
                        (("2" (INST? -1)
                          (("2" (ASSERT)
                            (("2" (REVEAL 1)
                              (("2" (HIDE -1 -2 2) (("2" (GRIND) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|pred| TYPE-EQ-DECL NIL |defined_types| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|ac_app?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|extract_arg| DEF-DECL "list[term]" |tuples| NIL)
    (|nat_induction| FORMULA-DECL NIL |naturalnumbers| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|ac_sym| ADT-ACCESSOR-DECL "[(ac_app?) -> ac_symbol]" |term_adt| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|select_nth| DEF-DECL "term" |tuples| NIL)
    (|string| TYPE-EQ-DECL NIL |strings| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|length_append| FORMULA-DECL NIL |list_props| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL))
   SHOSTAK))
 (|suf_cond_pair_in_gen_pairs_order| 0
  (|suf_cond_pair_in_gen_pairs_order-1| NIL 3763410940
   ("" (SKEEP)
    (("" (LEMMA "gen_pairs_nth_implies_gen_pairs_nth_above")
      ((""
        (INST -1 "append(arg1, arg2)" "length(append(arg1, arg2)) - 1"
         "length(arg1)" "pair(t1, t2)")
        (("1" (PROP)
          (("1" (EXPAND "gen_pairs_order" 1) (("1" (PROPAX) NIL NIL)) NIL)
           ("2" (HIDE 2)
            (("2" (EXPAND "gen_pairs_order_nth" 1)
              (("2" (LIFT-IF)
                (("2" (SPLIT)
                  (("1" (FLATTEN)
                    (("1" (HIDE 1)
                      (("1" (PROP)
                        (("1" (GRIND)
                          (("1" (GRIND)
                            (("1" (CASE "null?(arg1)")
                              (("1" (HIDE -2 -4) (("1" (GRIND) NIL NIL)) NIL)
                               ("2" (HIDE -2 -3) (("2" (GRIND) NIL NIL)) NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (HIDE -3)
                          (("2" (EXPAND "gen_pairs_order" -2)
                            (("2" (EXPAND "gen_pairs_order_nth")
                              (("2" (CASE "null?(arg1)")
                                (("1" (HIDE -2) (("1" (GRIND) NIL NIL)) NIL)
                                 ("2" (HIDE -2) (("2" (GRIND) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("3" (HIDE -2 -3)
                          (("3" (GRIND)
                            (("3" (REWRITE "length_append")
                              (("3" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (FLATTEN)
                    (("2"
                      (CASE "arg1 = get_args_le(append(arg1,
                                                                          arg2),
                                                                   length(arg1))")
                      (("1" (REPLACE -1 4 RL)
                        (("1"
                          (CASE "arg2 = get_args_gt(append(arg1,
                                                                          arg2),
                                                                   length(arg1))")
                          (("1" (REPLACE -1 4 RL)
                            (("1" (SPLIT)
                              (("1" (FLATTEN)
                                (("1" (HIDE -2 -3 1 2 3 4)
                                  (("1" (CASE "null?(arg1) OR null?(arg2)")
                                    (("1" (PROP)
                                      (("1" (HIDE -2 -4)
                                        (("1" (EXPAND "gen_pairs_order")
                                          (("1" (GRIND) NIL NIL)) NIL))
                                        NIL)
                                       ("2" (HIDE -2 -3)
                                        (("2" (EXPAND "gen_pairs_order")
                                          (("2" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL)
                                     ("2" (HIDE -2 -3)
                                      (("2" (FLATTEN)
                                        (("2" (REWRITE "length_append")
                                          (("2" (GRIND) NIL NIL)) NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (FLATTEN)
                                (("2" (SPLIT)
                                  (("1" (FLATTEN)
                                    (("1" (HIDE -1 -2 -3 2 3 4 5)
                                      (("1"
                                        (LEMMA "suf_cond_pair_in_get_pairs")
                                        (("1" (EXPAND "gen_pairs_order" -2)
                                          (("1" (EXPAND "gen_pairs_order" -3)
                                            (("1" (GRIND)
                                              (("1" (HIDE -1 2)
                                                (("1" (CASE "null?(arg2)")
                                                  (("1" (HIDE 1)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL)
                                                   ("2" (HIDE -1)
                                                    (("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (CASE "null?(arg1)")
                                                (("1" (HIDE -3 2)
                                                  (("1" (HIDE 1)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (HIDE -1 -2 3)
                                                  (("2" (GRIND) NIL NIL)) NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (FLATTEN)
                                    (("2" (REWRITE "append_member")
                                      (("1" (FLATTEN)
                                        (("1" (HIDE -1 -2 1 3 4 5 6 7)
                                          (("1" (EXPAND "gen_pairs_order" -1)
                                            (("1" (EXPAND "gen_pairs_order" -2)
                                              (("1"
                                                (REWRITE
                                                 "suf_cond_pair_in_get_pairs")
                                                (("1" (CASE "null?(arg2)")
                                                  (("1" (HIDE -2 1 2)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL)
                                                   ("2" (HIDE -1 -2 3)
                                                    (("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL)
                                                 ("2" (CASE "null?(arg1)")
                                                  (("1" (HIDE -3 1 2)
                                                    (("1" (GRIND) NIL NIL))
                                                    NIL)
                                                   ("2" (HIDE -1 -2 3)
                                                    (("2" (GRIND) NIL NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL)
                                       ("2" (HIDE-ALL-BUT 1)
                                        (("2" (REVEAL -4)
                                          (("2" (CASE "null?(arg2)")
                                            (("1" (GRIND) NIL NIL)
                                             ("2" (GRIND) NIL NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (HIDE-ALL-BUT 1)
                            (("2" (LEMMA "get_args_gt_is_sound")
                              (("2" (GRIND) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (HIDE-ALL-BUT 1)
                        (("2" (LEMMA "get_args_le_is_sound")
                          (("2" (GRIND) NIL NIL)) NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL)
           ("3" (HIDE 2)
            (("3" (REWRITE "length_append")
              (("3" (CASE "null?(arg2)")
                (("1" (HIDE -2 1)
                  (("1" (EXPAND "gen_pairs_order" -2) (("1" (GRIND) NIL NIL))
                    NIL))
                  NIL)
                 ("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL)
           ("4" (HIDE-ALL-BUT 1)
            (("4" (REWRITE "length_append") (("4" (ASSERT) NIL NIL)) NIL))
            NIL))
          NIL)
         ("2" (HIDE 2)
          (("2" (CASE "null?(arg1)")
            (("1" (HIDE -3 1)
              (("1" (EXPAND "gen_pairs_order") (("1" (GRIND) NIL NIL)) NIL))
              NIL)
             ("2" (HIDE -1 -2) (("2" (GRIND) NIL NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|pair?| ADT-RECOGNIZER-DECL "[term -> boolean]" |term_adt| NIL)
    (|pair| ADT-CONSTRUCTOR-DECL "[[term, term] -> (pair?)]" |term_adt| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|get_args_le_is_sound| FORMULA-DECL NIL |tuples| NIL)
    (|get_args_gt_is_sound| FORMULA-DECL NIL |tuples| NIL)
    (|append_member| FORMULA-DECL NIL |structure_extra| NIL)
    (|get_pairs| DEF-DECL "list[term]" |tuples| NIL)
    (|suf_cond_pair_in_get_pairs| FORMULA-DECL NIL |tuples| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|get_args_gt| DEF-DECL "list[term]" |tuples| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|get_args_le| DEF-DECL "list[term]" |tuples| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|length_append| FORMULA-DECL NIL |list_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|gen_pairs_order_nth| DEF-DECL "list[term]" |tuples| NIL)
    (|gen_pairs_order| CONST-DECL "list[term]" |tuples| NIL)
    (|gen_pairs_nth_implies_gen_pairs_nth_above| FORMULA-DECL NIL |tuples|
     NIL))
   SHOSTAK))
 (|t_in_gen_pairs_order_t| 0
  (|t_in_gen_pairs_order_t-1| NIL 3763410449
   ("" (SKEEP)
    (("" (EXPAND "gen_pairs_order" 1)
      (("" (CASE "length((: t :)) = 1")
        (("1" (REPLACE -1 1)
          (("1" (ASSERT)
            (("1" (HIDE -1)
              (("1" (EXPAND "gen_pairs_order_nth") (("1" (GRIND) NIL NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (HIDE 2) (("2" (GRIND) NIL NIL)) NIL))
        NIL))
      NIL))
    NIL)
   ((|gen_pairs_order| CONST-DECL "list[term]" |tuples| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (|gen_pairs_order_nth| DEF-DECL "list[term]" |tuples| NIL)
    (|odd_minus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|variable| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (PRED TYPE-EQ-DECL NIL |defined_types| NIL)
    (|term| TYPE-DECL NIL |term_adt| NIL)
    (|ac_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|commutative_symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|symbol| TYPE-EQ-DECL NIL |nominal_term| NIL)
    (|char| TYPE-EQ-DECL NIL |strings| NIL)
    (|char?| ADT-RECOGNIZER-DECL "[character -> boolean]" |character_adt| NIL)
    (|character| TYPE-DECL NIL |character_adt| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|perm| TYPE-EQ-DECL NIL |atoms| NIL) (|list| TYPE-DECL NIL |list_adt| NIL)
    (|atom| TYPE-EQ-DECL NIL |atoms| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   SHOSTAK)))

