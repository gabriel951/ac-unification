(|structure_extra|
 (|append_member| 0
  (|append_member-2| NIL 3745849197
   ("" (INDUCT "l1")
    (("1" (INDUCT "l2") (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
     ("2" (GRIND) NIL NIL))
    NIL)
   ((|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |structure_extra| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|member| DEF-DECL "bool" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL))
   NIL)
  (|append_member-1| NIL 3624620858
   ("" (INDUCT L1)
    (("1" (INDUCT L2) (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL)
     ("2" (GRIND) NIL NIL))
    NIL)
   NIL SHOSTAK))
 (|nth_append_TCC1| 0
  (|nth_append_TCC1-1| NIL 3627807289
   ("" (SKEEP) (("" (REWRITE "length_append") (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   ((|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|length_append| FORMULA-DECL NIL |list_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |structure_extra| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL))
   NIL))
 (|nth_append_TCC2| 0
  (|nth_append_TCC2-1| NIL 3627807289 ("" (SUBTYPE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |structure_extra| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL))
 (|nth_append| 0
  (|nth_append-2| NIL 3745849360
   ("" (SKOLEM 1 ("_" "l2" "_"))
    (("" (INDUCT "l1")
      (("1" (GRIND) NIL NIL)
       ("2" (SKEEP)
        (("2" (SKEEP)
          (("2" (EXPAND "length" 1)
            (("2" (EXPAND "append" 1)
              (("2" (EXPAND "nth" 1 (1 2))
                (("2" (LIFT-IF)
                  (("2" (LIFT-IF)
                    (("2" (LIFT-IF)
                      (("2" (SPLIT 1)
                        (("1" (GRIND) NIL NIL)
                         ("2" (FLATTEN)
                          (("2" (TYPEPRED "i")
                            (("2" (EXPAND "length" -1 1)
                              (("2" (INST -2 "i-1")
                                (("1" (GRIND) NIL NIL) ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)
       ("4" (HIDE 2)
        (("4" (GRIND) (("4" (REWRITE "length_append") NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|append| DEF-DECL "list[T]" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |nat_types| NIL) NIL
    (|length| DEF-DECL "nat" |list_props| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|nnint_plus_nnint_is_nnint| APPLICATION-JUDGEMENT "nonneg_int" |integers|
     NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|list_induction| FORMULA-DECL NIL |list_adt| NIL)
    (T FORMAL-TYPE-DECL NIL |structure_extra| NIL)
    (|int_plus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    NIL NIL NIL (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|length_append| FORMULA-DECL NIL |list_props| NIL))
   NIL)
  (|nth_append-1| NIL 3627807291
   ("" (SKOLEM 1 ("_" L2 "_"))
    (("" (INDUCT L1)
      (("1" (GRIND) NIL NIL)
       ("2" (SKEEP*)
        (("2" (EXPAND LENGTH 1)
          (("2" (EXPAND APPEND 1)
            (("2" (EXPAND NTH 1 (1 2))
              (("2" (LIFT-IF)
                (("2" (LIFT-IF)
                  (("2" (LIFT-IF)
                    (("2" (SPLIT 1)
                      (("1" (GRIND) NIL NIL)
                       ("2" (FLATTEN)
                        (("2" (TYPEPRED I)
                          (("2" (EXPAND LENGTH -1 1)
                            (("2" (INST -2 "i-1")
                              (("1" (GRIND) NIL NIL) ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL)
       ("3" (HIDE 2) (("3" (GRIND) NIL NIL)) NIL)
       ("4" (HIDE 2)
        (("4" (GRIND) (("4" (REWRITE LENGTH_APPEND) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

